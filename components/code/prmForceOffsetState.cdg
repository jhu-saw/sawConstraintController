inline-header {
#include <cisstCommon/cmnGenericObject.h> 
#include <cisstVector/vctDynamicVectorTypes.h>
#include <cisstVector/vctFixedSizeVectorTypes.h>
#include <cisstVector/vctDynamicMatrixTypes.h>
#include <cisstVector/vctFixedSizeVectorTypes.h>
#include <sawConstraintController/prmOffsetState.h>
}
class {
    name prmForceOffsetState;

    base-class {
      type prmOffsetState;
    }

    inline-header{
        /*! Constructor
        */
        prmForceOffsetState(const std::string & n, const std::string & bn, const vctFrm3 & of) : prmOffsetState(n,bn,of){}

        //! Updates values based on those of the base force sensor
        /*! Update
        */
        void Update();
    }
}

inline-code {

//! Updates values based on those of the base force sensor
/*! Update
*/
void prmForceOffsetState::Update()
{
	Values.SetSize(6);
	vct3 baseValuesTrans, baseValuesRot, f;
	for(size_t i = 0; i < 3; i++)
	{
        baseValuesTrans[i] = mbaseSensor->Values[i];
        baseValuesRot[i] = mbaseSensor->Values[3+i];
	}
    f = moffsetFrame.Rotation() * baseValuesTrans;
    Values[0] = f[0];
    Values[1] = f[1];
    Values[2] = f[2];
    f = moffsetFrame.Rotation() * baseValuesRot;
    Values[3] = f[0];
    Values[4] = f[1];
    Values[5] = f[2];
}
}

